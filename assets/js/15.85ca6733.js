(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{195:function(a,t,e){"use strict";e.r(t);var r=e(0),s=Object(r.a)({},function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"http缓存首部"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http缓存首部","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP缓存首部")]),a._v(" "),e("h3",{attrs:{id:"cache-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control")]),a._v(" "),e("p",[a._v("HTTP1.1协议版本新增的通用消息头字段，可用在请求和响应中。客户端可以在HTTP请求中使用的标准"),e("code",[a._v("Cache-Control")]),a._v("指令如下:")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Cache-Control: max-age=<seconds>\nCache-Control: max-stale[=<seconds>]\nCache-Control: min-fresh=<seconds>\nCache-control: no-cache \nCache-control: no-store\nCache-control: no-transform\nCache-control: only-if-cached\n")])])]),e("p",[a._v("服务器可以在响应中使用的标准"),e("code",[a._v("Cache-Control")]),a._v("指令如下：")]),a._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Cache-control: must-revalidate\nCache-control: no-cache\nCache-control: no-store\nCache-control: no-transform\nCache-control: public\nCache-control: private\nCache-control: proxy-revalidate\nCache-Control: max-age=<seconds>\nCache-control: s-maxage=<seconds>\n")])])]),e("p",[a._v("以下分别对各值的含义做解释，可参考"),e("a",{attrs:{href:"https://tools.ietf.org/html/rfc7234#section-5.2.1",target:"_blank",rel:"noopener noreferrer"}},[a._v("RFC7234"),e("OutboundLink")],1),a._v("中的相关说明")]),a._v(" "),e("h4",{attrs:{id:"可缓存性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#可缓存性","aria-hidden":"true"}},[a._v("#")]),a._v(" 可缓存性")]),a._v(" "),e("ul",[e("li",[a._v("public: 表明响应可以被任何对象（包括：发送请求的客户端，代理服务器，等等）缓存，即使是通常不可缓存的内容（例如，该响应没有max-age指令或Expires消息头）。")]),a._v(" "),e("li",[a._v("private: 表明响应只能被单个用户缓存，不能作为共享缓存（即代理服务器不能缓存它）。私有缓存可以缓存响应内容。")]),a._v(" "),e("li",[a._v("no-cache: 在使用缓存副本作为响应返回给用户之前，强制要求缓存把请求提交给原始服务器进行验证。可分两种情况理解：当客户端在请求中发送这个头时，表明客户端不愿接受缓存服务器在未经过源服务器的再次验证("),e("code",[a._v("revalidation")]),a._v(")时把缓存返回；当服务器在响应请求中使用这个头时，表明服务器告诉中间的缓存服务器和客户端，使用该响应的缓存时必须先和源服务器进行再次验证("),e("code",[a._v("revalidation")]),a._v(")，不可直接使用缓存。")]),a._v(" "),e("li",[a._v("no-store: cache禁止存储请求和响应中的任何部分。当请求中使用该头时，告诉缓存服务器不可使用当前缓存，必须从源服务器重新获取；当响应中使用该头时，告诉缓存服务器和客户端，不可存储该响应为缓存，并且必须尽最大努力在转发请求/响应之后移除这些信息。")])]),a._v(" "),e("h4",{attrs:{id:"到期性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#到期性","aria-hidden":"true"}},[a._v("#")]),a._v(" 到期性")]),a._v(" "),e("ul",[e("li",[a._v("max-age: 指定缓存的保质期。当请求中使用时，表示客户端不愿接受一个生命期"),e("code",[a._v("Age")]),a._v("大于所给"),e("code",[a._v("max-age")]),a._v("的缓存作为响应，除非另外也使用了"),e("code",[a._v("max-stale")]),a._v("。")]),a._v(" "),e("li",[a._v("max-stale: 指定客户端能容忍的缓存最大过期时间。只用于请求中，指令标示了客户端愿意接收一个已经过期了的响应。如果指定了"),e("code",[a._v("max-stale")]),a._v("的值，则最大容忍时间为对应的秒数。如果没有指定，那么说明浏览器愿意接收任何"),e("code",[a._v("Age")]),a._v("的响应。")]),a._v(" "),e("li",[a._v("min-fresh: 设定能够容忍的最小新鲜度。标示了客户端不愿意接受剩余新鲜度小于设定的时间的响应。")])]),a._v(" "),e("h4",{attrs:{id:"must-revalidate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#must-revalidate","aria-hidden":"true"}},[a._v("#")]),a._v(" must-revalidate")]),a._v(" "),e("ul",[e("li",[a._v("must-revalidate: 一旦资源过期（比如已经超过max-age），在成功向原始服务器验证之前，缓存不能用该资源响应后续请求，必须和源服务器重新验证。即便有"),e("code",[a._v("stale-while-revalidate")]),a._v("、"),e("code",[a._v("stale-if-error")]),a._v("等指令，也必须重新验证。")]),a._v(" "),e("li",[a._v("proxy-revalidate: 与must-revalidate作用相同，但它仅适用于共享缓存（例如代理），并被私有缓存忽略。")])]),a._v(" "),e("h4",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他","aria-hidden":"true"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),e("ul",[e("li",[a._v("no-transform: 禁止中间人更改payload（请求体）。")]),a._v(" "),e("li",[a._v("only-if-cached: 只要缓存的内容。"),e("code",[a._v("only-if-cached")]),a._v("请求指定指示了客户端指向获取一个缓存的响应。如果接收到这个指定，cache应该要么用缓存的内容给出响应，要么给出一个"),e("code",[a._v("504（GateWay Timeou）")]),a._v("响应码。如果一组cache被作为一个内部相连的系统，那么其中的某个成员可以向这个缓存组里请求响应。")])]),a._v(" "),e("h3",{attrs:{id:"expires"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires","aria-hidden":"true"}},[a._v("#")]),a._v(" Expires")]),a._v(" "),e("p",[a._v("响应头包含一个服务器生成的日期/时间，即在此时候之后，响应缓存过期。该值是服务器生成该响应的值，客户端收到响应时新鲜度已经过去了"),e("code",[a._v("Age")]),a._v("。无效的日期，比如0，代表着过去的日期，即该资源已经过期。但是应尽量避免使用0，因为有些http应用会引起问题。如果在Cache-Control响应头设置了"),e("code",[a._v("max-age")]),a._v("或者"),e("code",[a._v("s-max-age")]),a._v("指令，那么"),e("code",[a._v("Expires")]),a._v("头会被忽略。")]),a._v(" "),e("h3",{attrs:{id:"pragma"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pragma","aria-hidden":"true"}},[a._v("#")]),a._v(" Pragma")]),a._v(" "),e("p",[a._v("该指令是一个在HTTP/1.0中规定的通用首部，这个首部的效果依赖于不同的实现，所以在“请求-响应”链中可能会有不同的效果。它用来向后兼容只支持HTTP/1.0协议的缓存服务器，那时候HTTP/1.1协议中的"),e("code",[a._v("Cache-Control")]),a._v("还没有出来。只可用于请求中，值为"),e("code",[a._v("no-cache")]),a._v("。假如"),e("code",[a._v("Cache-Control")]),a._v("不存在的话，它的行为与"),e("code",[a._v("Cache-Control: no-cache")]),a._v("一致。建议只在需要兼容HTTP/1.0客户端的场合下应用"),e("code",[a._v("Pragma")]),a._v("首部。")]),a._v(" "),e("h3",{attrs:{id:"etag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#etag","aria-hidden":"true"}},[a._v("#")]),a._v(" Etag")]),a._v(" "),e("p",[a._v("HTTP响应头是资源的特定版本的标识符。值对客户端及中间缓存服务器透明。这可以让缓存更高效，并节省带宽，因为如果内容没有改变，Web服务器不需要发送完整的响应。而如果内容发生了变化，使用ETag有助于防止资源的同时更新相互覆盖（“空中碰撞”）。如果给定URL中的资源更改，则一定要生成新的Etag值。 因此Etags类似于指纹，也可能被某些服务器用于跟踪。 比较etags能快速确定此资源是否变化，但也可能被跟踪服务器永久存留。")]),a._v(" "),e("h3",{attrs:{id:"last-modified"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#last-modified","aria-hidden":"true"}},[a._v("#")]),a._v(" Last-Modified")]),a._v(" "),e("p",[a._v("一个响应首部，其中包含源头服务器认定的资源做出修改的日期及时间。 它通常被用作一个验证器来判断接收到的或者存储的资源是否彼此一致。精确到秒，精确度比"),e("code",[a._v("ETag")]),a._v("要低，所以这是一个备用机制。包含有"),e("code",[a._v("If-Modified-Since")]),a._v("或"),e("code",[a._v("If-Unmodified-Since")]),a._v("首部的条件请求会使用这个字段。")]),a._v(" "),e("h3",{attrs:{id:"if-none-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-none-match","aria-hidden":"true"}},[a._v("#")]),a._v(" If-None-Match")]),a._v(" "),e("p",[a._v("如果远端资源的实体标签与在"),e("code",[a._v("ETag")]),a._v("这个首部中列出的值都不相同的话，表示条件匹配成功。默认地，除非实体标签带有"),e("code",[a._v("W/")]),a._v("前缀，否者它将会执行强验证。")]),a._v(" "),e("h3",{attrs:{id:"if-modified-since"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#if-modified-since","aria-hidden":"true"}},[a._v("#")]),a._v(" If-Modified-Since")]),a._v(" "),e("p",[a._v("如果远端资源的"),e("code",[a._v("Last-Modified")]),a._v("首部标识的日期比在该首部中列出的值要更晚，表示条件匹配成功。")]),a._v(" "),e("h2",{attrs:{id:"常见首部比较"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见首部比较","aria-hidden":"true"}},[a._v("#")]),a._v(" 常见首部比较")]),a._v(" "),e("h3",{attrs:{id:"max-age-0与no-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-age-0与no-cache","aria-hidden":"true"}},[a._v("#")]),a._v(" max-age=0与no-cache")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("max-age=0")]),a._v("表示客户端或缓存服务器"),e("code",[a._v("应该")]),a._v("不使用该过期缓存，但是如果请求中有"),e("code",[a._v("max-stale")]),a._v("且响应中没有"),e("code",[a._v("must-revalidate")]),a._v("则仍可以使用该缓存。")]),a._v(" "),e("li",[e("code",[a._v("no-cache")]),a._v("表示客户端和缓存服务器"),e("code",[a._v("必须")]),a._v("不能使用过期缓存，每次都需要和源服务器重新验证")])]),a._v(" "),e("h3",{attrs:{id:"no-cache与must-revalidate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-cache与must-revalidate","aria-hidden":"true"}},[a._v("#")]),a._v(" no-cache与must-revalidate")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("no-cache")]),a._v("表示每次请求都需要和源服务器进行重新验证")]),a._v(" "),e("li",[e("code",[a._v("must-revalidate")]),a._v("表示只有当缓存过期后才必须和源服务器重新验证")])]),a._v(" "),e("h2",{attrs:{id:"缓存控制顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#缓存控制顺序","aria-hidden":"true"}},[a._v("#")]),a._v(" 缓存控制顺序")]),a._v(" "),e("p",[a._v("响应中关于缓存的各首部及对应值有如下的优先级递减，及相关的描述：")]),a._v(" "),e("h3",{attrs:{id:"cache-control-no-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-no-store","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control: no-store")]),a._v(" "),e("h3",{attrs:{id:"cache-control-no-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-no-cache","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control: no-cache")]),a._v(" "),e("h3",{attrs:{id:"cache-control-must-revalidate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-must-revalidate","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control: must-revalidate")]),a._v(" "),e("h3",{attrs:{id:"cache-control-max-age"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-max-age","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control: max-age")]),a._v(" "),e("h3",{attrs:{id:"expires-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Expires")]),a._v(" "),e("h3",{attrs:{id:"试探性过期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#试探性过期","aria-hidden":"true"}},[a._v("#")]),a._v(" 试探性过期")]),a._v(" "),e("ul",[e("li",[a._v("有"),e("code",[a._v("Last-Modified")]),a._v(": 会有多种试探性过期算法，其中"),e("code",[a._v("LM-Factor")]),a._v("算法大致为：当前响应的服务器时间"),e("code",[a._v("Data")]),a._v("减去"),e("code",[a._v("Last-Modified")]),a._v("，再乘一个系数，比如"),e("code",[a._v("0.1或者0.2")]),a._v("，但是多半多数缓存客户端会限制最大值，比如一周。")]),a._v(" "),e("li",[a._v("无"),e("code",[a._v("Last-Modified")]),a._v(": 如果练最后修改时间也没有，那么缓存就没有什么信息可使用了，这时候缓存客户端会分配一个默认的新鲜生命期，比如"),e("code",[a._v("一个小时或一天")]),a._v("。但也有保守的缓存客户端会设置新鲜生命期为0，强制每次都去重新验证")])]),a._v(" "),e("h2",{attrs:{id:"http-equiv控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-equiv控制","aria-hidden":"true"}},[a._v("#")]),a._v(" HTTP-EQUIV控制")]),a._v(" "),e("p",[a._v("Http2.0定义了"),e("code",[a._v("<meta http-equiv>")]),a._v("标签，这个可选的标签位于HTML文档的顶部，定义了与该文档有所关联的HTTP首部。与缓存相关的设置如下：")]),a._v(" "),e("h3",{attrs:{id:"expires-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#expires-3","aria-hidden":"true"}},[a._v("#")]),a._v(" Expires")]),a._v(" "),e("p",[a._v("常用格式为：")]),a._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("http-equiv")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("expires"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("Wed,10 Apr 2017 16:34:59 GMT"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h3",{attrs:{id:"pragma-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pragma-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Pragma")]),a._v(" "),e("p",[a._v("常用格式为：")]),a._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("http-equiv")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("Pragma"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("no-cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h3",{attrs:{id:"cache-control-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Cache-Control")]),a._v(" "),e("p",[a._v("常用格式为：")]),a._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("meta")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("http-equiv")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("cache-control"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("content")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("no-cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])])]),e("h3",{attrs:{id:"各端的使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#各端的使用","aria-hidden":"true"}},[a._v("#")]),a._v(" 各端的使用")]),a._v(" "),e("ul",[e("li",[a._v("最初，"),e("code",[a._v("http-equiv")]),a._v("标签是给Web服务器使用的，服务器应该为HTML解析"),e("code",[a._v("http-equiv")]),a._v("标签，并将规定的首部插入HTTP响应中，但是支持这个可选特性会增加服务器的额外负载，所以很少有Web服务器和代理支持此特性。")]),a._v(" "),e("li",[a._v("有些浏览器也会解析HTML中的"),e("code",[a._v("http-equiv")]),a._v("标签，想对待真实的HTTP首部那样进行处理，但是这样解析出来的"),e("code",[a._v("Cache-Control")]),a._v("规则可能会和拦截代理缓存所用的规则有所不同，会使缓存的过期处理行为发生混乱。")]),a._v(" "),e("li",[e("code",[a._v("http-equiv")]),a._v("标签并不是控制文档缓存特性的好方法。通过配追正确的服务器发出HTTP首部，使传送文档缓存控制请求的唯一可靠方法。")])])])},[],!1,null,null,null);t.default=s.exports}}]);