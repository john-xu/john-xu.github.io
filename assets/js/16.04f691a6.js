(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{187:function(e,a,t){"use strict";t.r(a);var r=t(0),s=Object(r.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"运行和控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行和控制","aria-hidden":"true"}},[e._v("#")]),e._v(" 运行和控制")]),e._v(" "),t("h3",{attrs:{id:"nginx命令行参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx命令行参数","aria-hidden":"true"}},[e._v("#")]),e._v(" nginx命令行参数")]),e._v(" "),t("p",[e._v("常用的命令行参数如下：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("-c </path/to/config>")]),e._v(" 为"),t("code",[e._v("Nginx")]),e._v("指定一个配置文件，来代替缺省的")]),e._v(" "),t("li",[t("code",[e._v("-t")]),e._v(" 不运行，而仅仅测试配置文件。nginx将检查配置文件的语法的正确性，并尝试打开配置文件中所引用到的文件")]),e._v(" "),t("li",[t("code",[e._v("-v")]),e._v(" 显示nginx的版本")]),e._v(" "),t("li",[t("code",[e._v("-V")]),e._v(" 显示nginx的版本，编译器版本和配置参数\n启动命令："),t("code",[e._v("/usr/local/nginx/nginx")]),e._v("（nginx二进制文件的绝对路径）")])]),e._v(" "),t("h3",{attrs:{id:"nginx控制信号"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx控制信号","aria-hidden":"true"}},[e._v("#")]),e._v(" nginx控制信号")]),e._v(" "),t("p",[e._v("主进程可以处理以下的信号：")]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("信号")]),e._v(" "),t("th",[e._v("信号说明")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("TERM，INT")]),e._v(" "),t("td",[e._v("快速关闭命令，立刻关闭nginx进程")])]),e._v(" "),t("tr",[t("td",[e._v("QUIT")]),e._v(" "),t("td",[e._v("从容停止命令，等所有请求结束后关闭服务")])]),e._v(" "),t("tr",[t("td",[e._v("HUP")]),e._v(" "),t("td",[e._v("重载配置，用新的配置开始新的工作进程，从容关闭旧的工作进程")])]),e._v(" "),t("tr",[t("td",[e._v("USR1")]),e._v(" "),t("td",[e._v("重新打开日志文件")])]),e._v(" "),t("tr",[t("td",[e._v("USR2")]),e._v(" "),t("td",[e._v("平滑升级可执行程序")])]),e._v(" "),t("tr",[t("td",[e._v("WINCH")]),e._v(" "),t("td",[e._v("从容关闭工作进程")])])])]),e._v(" "),t("p",[e._v("信号的使用案例如下：")]),e._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" nginx\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("kill")]),e._v(" -QUIT nginx主进程号\n")])])]),t("h2",{attrs:{id:"主模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主模块","aria-hidden":"true"}},[e._v("#")]),e._v(" 主模块")]),e._v(" "),t("h3",{attrs:{id:"daemon"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#daemon","aria-hidden":"true"}},[e._v("#")]),e._v(" daemon")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：daemon on | off;\n默认：on\n上下文：main\n")])])]),t("p",[e._v("决定"),t("code",[e._v("nginx")]),e._v("是否应以守护进程的方式工作，主要用于开发。但是当使用"),t("code",[e._v("supervisor")]),e._v("来管理"),t("code",[e._v("nginx")]),e._v("时需要不以守护进程方式工作，设置为off")]),e._v(" "),t("h3",{attrs:{id:"error-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error-log","aria-hidden":"true"}},[e._v("#")]),e._v(" error_log")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：error_log file | stderr [debug | info | notice | warn | error | crit | alert | emerg];\n默认：error logs/error.log error\n上下文：main,http,server,location\n")])])]),t("p",[e._v("第一个参数定义了存放日志的文件，如果为stderr则会将日志输出到标准错误输出。"),t("br"),e._v("\n第二个参数为日志级别，上述级别依次从低到高，会记录制定的日志级别和更高级级别的日志。默认为"),t("code",[e._v("crit")]),t("br"),e._v("\n如果要关闭错误日志功能需要这样设置"),t("code",[e._v("error_log /dev/null [error_state];")]),e._v("，为了使debug日志工作，需要添加"),t("code",[e._v("--with-debug")]),e._v("编译选项")]),e._v(" "),t("h3",{attrs:{id:"include"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#include","aria-hidden":"true"}},[e._v("#")]),e._v(" include")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：include file | mask;\n默认：-\n上下文：任意\n")])])]),t("p",[e._v("将另一个file，或者匹配制定mask的文件包含到配置中，被包含文件需由语法正确的指令和块组成。")]),e._v(" "),t("h3",{attrs:{id:"pid"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pid","aria-hidden":"true"}},[e._v("#")]),e._v(" pid")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：pid file;\n默认：pid nginx.pid\n上下文：main\n")])])]),t("p",[e._v("定义存储nginx主进程ID的file，例如可以使用"),t("code",[e._v("kill -HUP cat /var/log/nginx.pid")]),e._v("来进行配置文件重新加载")]),e._v(" "),t("h3",{attrs:{id:"user"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user","aria-hidden":"true"}},[e._v("#")]),e._v(" user")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：user user [group];\n默认：user nobody nobody;\n上下文：main\n")])])]),t("p",[e._v("定义工作进程使用的user和group身份")]),e._v(" "),t("h3",{attrs:{id:"worker-cpu-affinity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-cpu-affinity","aria-hidden":"true"}},[e._v("#")]),e._v(" worker_cpu_affinity")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：worker_cpu_affinity cpumask ...;\n默认：-\n上下文：main\n")])])]),t("p",[e._v("绑定工作进程到制定的cpu集合，因为工作进程默认不会绑定到任何特定的cpu，这样可以更好利用多核cpu，例如分别绑定到4核："),t("code",[e._v("worker_cpu_affinity 0001 0010 0100 1000;")]),e._v("，该指令仅在"),t("code",[e._v("FreeFSD")]),e._v("和"),t("code",[e._v("Linux")]),e._v("系统有效。")]),e._v(" "),t("h3",{attrs:{id:"worker-processes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-processes","aria-hidden":"true"}},[e._v("#")]),e._v(" worker_processes")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：work_processes number | auto\n默认：worker_processes 1;\n上下文：main\n")])])]),t("p",[e._v("定义工作进程的数量。关于这个值的优化依赖很多因素，包括但不限于cpu核数、硬盘数量和负载模式等，设置为cpu核数会是一个不错的开始，"),t("code",[e._v("auto")]),e._v("时nginx会自动检测它")]),e._v(" "),t("h2",{attrs:{id:"事件模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事件模块","aria-hidden":"true"}},[e._v("#")]),e._v(" 事件模块")]),e._v(" "),t("p",[t("code",[e._v("events")]),e._v("模块提供配置上下文，以解析那些影响连接处理的指令")]),e._v(" "),t("h3",{attrs:{id:"use"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#use","aria-hidden":"true"}},[e._v("#")]),e._v(" use")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：use [ kqueue | rtsig | epoll | /dev/poll | select | poll | eventport ];\n默认：-\n上下文：events\n")])])]),t("p",[e._v("指定使用的连接处理方式，通常不需要明确设置，因为nginx默认会使用最高效的方法。")]),e._v(" "),t("h3",{attrs:{id:"worker-connections"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#worker-connections","aria-hidden":"true"}},[e._v("#")]),e._v(" worker_connections")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：worker_connections number;\n默认：worker_connections 512;\n上下文：events\n")])])]),t("p",[e._v("设置每个工作进程可以打开的最大并发数，这个数量包含所有连接（和后端服务器建立的连接等），而不仅仅是和客户端的连接。实际并发数不能超过打开文件的最大数量限制，这个限制可以用"),t("code",[e._v("worker_rlimit_nofile")]),e._v("指令修改。作为反向代理时，"),t("code",[e._v("max_clients")]),e._v("为"),t("code",[e._v("worker_processes * worker_connections/4")]),e._v("。")]),e._v(" "),t("h2",{attrs:{id:"http核心模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http核心模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP核心模块")]),e._v(" "),t("h3",{attrs:{id:"alias"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alias","aria-hidden":"true"}},[e._v("#")]),e._v(" alias")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：alias path;\n默认：-\n上下文：location\n")])])]),t("p",[e._v("定义指定路径的替换路径，比如")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location /i/ {\n    alias /data/w3/images/;\n}\n")])])]),t("p",[t("code",[e._v("/i/top.gif")]),e._v("将由"),t("code",[e._v("/data/w3/images/top.gif")]),e._v("文件来响应")]),e._v(" "),t("h3",{attrs:{id:"client-body-buffer-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#client-body-buffer-size","aria-hidden":"true"}},[e._v("#")]),e._v(" client_body_buffer_size")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：client_body_buffer_size size;\n默认：client_body_buffer_size 8k | 16k;\n上下文：http,server,location\n")])])]),t("p",[e._v("设置读取客户端请求正文的缓冲容量，如果正文大雨缓冲容量，整个正文或正文的一部分会写入临时文件"),t("code",[e._v("client_body_temp_path")]),e._v("，就要涉及I/O操作了。")]),e._v(" "),t("h3",{attrs:{id:"client-header-buffer-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#client-header-buffer-size","aria-hidden":"true"}},[e._v("#")]),e._v(" client_header_buffer_size")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：client_header_buffer_size size;\n默认：client_header_buffer_size 1k;\n上下文：http,server\n")])])]),t("p",[e._v("设置读取客户端请求头部的缓冲容量。对于大多数请求1k足够，如果含有的"),t("code",[e._v("cookie")]),e._v("很长，或者请求来自wap客户端，可能就要增大，如果请求头不能完整放在这块空间中，则将按照"),t("code",[e._v("large_client_header_buffers")]),e._v("指令的配置分配更多更大的缓冲")]),e._v(" "),t("h3",{attrs:{id:"client-max-body-size"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#client-max-body-size","aria-hidden":"true"}},[e._v("#")]),e._v(" client_max_body_size")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：client_max_body_size size;\n默认：client_max_body_size 1m;\n上下文：http,server,location\n")])])]),t("p",[e._v("设置允许客户端请求正文的最大长度，请求的长度由"),t("code",[e._v("Content-Length")]),e._v("请求头定。如果请求长度超过设定值，nginx将返回错误413"),t("code",[e._v("Request Entity Too Large")]),e._v("到客户端。浏览器不能正确显示这个错误，将"),t("code",[e._v("size")]),e._v("设置成0可以使nginx不检查客户端请求正文的长度。")]),e._v(" "),t("h3",{attrs:{id:"default-type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#default-type","aria-hidden":"true"}},[e._v("#")]),e._v(" default_type")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：default_type mime-type;\n默认：default_type text/plain;\n上下文：http,server,location\n")])])]),t("p",[e._v("定义响应的默认MIME类型，设置文件扩展名和响应的MIME类型的映射表则使用"),t("code",[e._v("types")]),e._v("指令。")]),e._v(" "),t("h3",{attrs:{id:"error-page"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#error-page","aria-hidden":"true"}},[e._v("#")]),e._v(" error_page")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：error_page code ... [=[response]] uri;\n默认：-\n上下文：http,server,location,if in location\n")])])]),t("p",[e._v("为指令错误定义显示的URI，当前配置级别没有error_page指令时，将从上层配置继承，例如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("error_page 404             /404.html\nerror_page 500 502 503 504 /50x.html\n")])])]),t("p",[e._v("也可以使用"),t("code",[e._v("=response")]),e._v("语法改变响应状态码，例如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("error_page 404 =200 /empty.gif\n")])])]),t("p",[e._v("更多参考可查看"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/ngx_http_core_module.html#error_page",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"if-modified-since"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-modified-since","aria-hidden":"true"}},[e._v("#")]),e._v(" if_modified_since")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：if_modified_since off | exact | before;\n默认：if_modified_since exact;\n上下文：http,server,location\n")])])]),t("p",[e._v("指定响应的修改时间和“If-Modified-Since”请求头的比较方法。")]),e._v(" "),t("h3",{attrs:{id:"index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#index","aria-hidden":"true"}},[e._v("#")]),e._v(" index")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：index file ...;\n默认：index index.html;\n上下文：http,server,location\n")])])]),t("p",[e._v("定义将要被作为默认页的文件。文件"),t("code",[e._v("file")]),e._v("的名字可以包含变量。文件以配置中指定的顺序被nginx检查。列表中的最后一个元素可以是一个带有绝对路径的文件。例子：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("index index.$geo.html index.0.html /index.html;\n")])])]),t("p",[e._v("index文件会引发内部重定向，请求可能会被其它location处理。 比如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location = / {\n    index index.html;\n}\n\nlocation / {\n    ...\n}\n")])])]),t("p",[e._v("请求"),t("code",[e._v("/")]),e._v("实际上将会在第二个"),t("code",[e._v("location")]),e._v("中作为"),t("code",[e._v("/index.html")]),e._v("被处理。")]),e._v(" "),t("h3",{attrs:{id:"internal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#internal","aria-hidden":"true"}},[e._v("#")]),e._v(" internal")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：internal;\n默认：-\n上下文：location\n")])])]),t("p",[e._v("指定一个路径是否只能用于内部访问。如果是外部访问，客户端将收到"),t("code",[e._v("404(Not Found)")]),e._v("错误。例如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("error_page 404 /404.html;\n\nlocation /404.html {\n    internal;\n}\n")])])]),t("p",[t("strong",[e._v("注意：")]),e._v(" nginx限制每个请求只能最多进行10次内部重定向，以防配置错误引起请求处理出现问题。 如果内部重定向次数已达到10次，nginx将返回"),t("code",[e._v("500(Internal Server Error)")]),e._v("错误。 同时，错误日志中将有"),t("code",[e._v("rewrite or internal redirection cycle")]),e._v("的信息。")]),e._v(" "),t("h3",{attrs:{id:"keepalive-timeout"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-timeout","aria-hidden":"true"}},[e._v("#")]),e._v(" keepalive_timeout")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：keepalive_timeout timeout [header_timeout];\n默认：keepalive_timeout 75s;\n上下文：http,server,location\n")])])]),t("p",[e._v("第一个参数设置客户端的长连接在服务器端保持的最长时间（在此时间客户端未发起新请求，则长连接关闭）。第二个参数为可选项，设置“Keep-Alive: timeout=time”响应头的值。可以为这两个参数设置不同的值。更多细节及各浏览器的反应参见"),t("a",{attrs:{href:"http://www.nginx.cn/doc/standard/httpcore.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"keepalive-requests"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive-requests","aria-hidden":"true"}},[e._v("#")]),e._v(" keepalive_requests")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：keepalive_requests number;\n默认：keepalive_requests 100;\n上下文：http,server,location\n")])])]),t("p",[e._v("设置通过一个长连接可以处理的最大请求数。请求数超过此值，长连接将关闭。")]),e._v(" "),t("h3",{attrs:{id:"listen"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#listen","aria-hidden":"true"}},[e._v("#")]),e._v(" listen")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：listen address[:port] [default_server] [setfib=number];\n默认：listen *:80 | *:8000;\n上下文：server\n")])])]),t("p",[e._v("设置nginx监听地址，nginx从这里接受请求。对于IP协议，这个地址就是address和port；对于UNIX域套接字协议，这个地址就是path。 一条listen指令只能指定一个address或者port。例如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("listen 127.0.0.1:8000;\nlisten 127.0.0.1;\nlisten 8000;\nlisten *:8000;\nlisten localhost:8000;\n")])])]),t("p",[e._v("IPv6地址使用方括号来表示：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("listen [::]:8000;\nlisten [fe80::1];\n")])])]),t("p",[e._v("UNIX域套接字则使用“unix:”前缀：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("listen unix:/var/run/nginx.sock;\n")])])]),t("p",[e._v("如果listen指令携带"),t("code",[e._v("default_server")]),e._v("参数，当前虚拟主机将成为指定address:port的默认虚拟主机。 如果任何listen指令都没有携带"),t("code",[e._v("default_server")]),e._v("参数，那么第一个监听address:port的虚拟主机将被作为这个地址的默认虚拟主机。")]),e._v(" "),t("h3",{attrs:{id:"location"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#location","aria-hidden":"true"}},[e._v("#")]),e._v(" location")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：location [ = | ~ | ~* | ^~ ] uri { ... }\n     location @name { ... }\n默认：-\n上下文：server,location\n")])])]),t("ul",[t("li",[e._v("为某个请求URI（路径）建立配置。"),t("br")]),e._v(" "),t("li",[e._v("路径匹配在URI规范化以后进行。所谓规范化，就是先将URI中形如“%XX”的编码字符进行解码， 再解析URI中的相对路径“.”和“..”部分， 另外还可能会压缩相邻的两个或多个斜线成为一个斜线。"),t("br")]),e._v(" "),t("li",[e._v("可以使用前缀字符串或者正则表达式定义路径。使用正则表达式需要在路径开始添加"),t("code",[e._v("~*")]),e._v("前缀 (不区分大小写)，或者"),t("code",[e._v("~")]),e._v("前缀(区分大小写)。为了根据请求URI查找路径，nginx先检查前缀字符串定义的路径 (前缀路径)，在这些路径中找到能最精确匹配请求URI的路径。然后nginx按在配置文件中的出现顺序检查正则表达式路径，匹配上某个路径后即停止匹配并使用该路径的配置，否则使用最大前缀匹配的路径的配置。\n更多参考可查看"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/ngx_http_core_module.html#location",target:"_blank",rel:"noopener noreferrer"}},[e._v("location使用说明"),t("OutboundLink")],1),e._v("。")])]),e._v(" "),t("h3",{attrs:{id:"root"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#root","aria-hidden":"true"}},[e._v("#")]),e._v(" root")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：root path;\n默认：root html;\n上下文：http,server,location,if in location\n")])])]),t("p",[e._v("为请求设置根目录，例如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location /i/ {\n    root /data/w3;\n}\n")])])]),t("p",[e._v("那么nginx将使用文件"),t("code",[e._v("/data/w3/i/top.gif")]),e._v("响应请求"),t("code",[e._v("/i/top.gif")]),e._v("。文件路径的构造仅仅是将URI拼在"),t("code",[e._v("root")]),e._v("指令的值后面。如果需要修改URI，应该使用"),t("code",[e._v("alias")]),e._v("指令。")]),e._v(" "),t("h3",{attrs:{id:"server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server","aria-hidden":"true"}},[e._v("#")]),e._v(" server")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：server {...}\n默认：-\n上下文：http\n")])])]),t("p",[e._v("表示开始设置虚拟主机的配置，更多信息可参加"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/request_processing.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Nginx如何处理一个请求"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"server-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-name","aria-hidden":"true"}},[e._v("#")]),e._v(" server_name")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('语法：server_name name ...;\n默认：server_name "";\n上下文：server\n')])])]),t("p",[e._v("设置虚拟主机名，例如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("server {\n    server_name example.com www.example.com;\n}\n")])])]),t("p",[e._v("共有三种："),t("code",[e._v("确切名称")]),e._v("，"),t("code",[e._v("通配符")]),e._v("，"),t("code",[e._v("正则表达式")]),e._v("，更多信息参考"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/server_names.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("虚拟主机名"),t("OutboundLink")],1),e._v("。")]),e._v(" "),t("h3",{attrs:{id:"try-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#try-files","aria-hidden":"true"}},[e._v("#")]),e._v(" try_files")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：try_files file ... uri;\n     try_files file ... =code;\n默认：-\n上下文：server,location\n")])])]),t("p",[e._v("按指定顺序检查文件是否存在，并且使用第一个找到的文件来处理请求，那么处理过程就是在当前上下文环境中进行的。文件路径是根据"),t("code",[e._v("root")]),e._v("指令和"),t("code",[e._v("alias")]),e._v("指令，将"),t("code",[e._v("file")]),e._v("参数拼接而成。可以在名字尾部添加斜线以检查目录是否存在，比如"),t("code",[e._v("$uri/")]),e._v("。如果找不到任何文件，将按最后一个参数指定的uri进行内部跳转。比如：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n    try_files $uri $uri/index.html $uri.html =404;\n}\n")])])]),t("h3",{attrs:{id:"types"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#types","aria-hidden":"true"}},[e._v("#")]),e._v(" types")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：types {...}\n默认：types {\n        text/html html;\n        image/gif gif;\n        image/jpeg jpg;\n     }\n上下文：http,server,location\n")])])]),t("p",[e._v("设置文件扩展名和响应的MIME类型的映射表。")]),e._v(" "),t("h2",{attrs:{id:"http-upstream模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-upstream模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Upstream模块")]),e._v(" "),t("p",[e._v("该模块允许定义一组服务器来实现后端服务器负载均衡，他们可以在"),t("code",[e._v("proxy_pass")]),e._v("，"),t("code",[e._v("fastcgi_pass")]),e._v("，"),t("code",[e._v("memcached_pass")]),e._v("中被引用到。更多信息可参考"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/ngx_http_upstream_module.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ngx_http_upstream_module模块"),t("OutboundLink")],1),e._v("。配置例子如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("upstream backend {\n    server backend1.example.com       weight=5;\n    server backend2.example.com:8080;\n    server unix:/tmp/backend3;        max_fails=3 fail_timeout=30s;\n\n    server backup1.example.com:8080   backup;\n    server backup2.example.com:8080   backup;\n}\n\nserver {\n    location / {\n        proxy_pass http://backend;\n    }\n}\n")])])]),t("h3",{attrs:{id:"upstream"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#upstream","aria-hidden":"true"}},[e._v("#")]),e._v(" upstream")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：upstream name {...}\n默认：-\n上下文：http\n")])])]),t("p",[e._v("定义一组服务器。这些服务器可以监听不同的端口。而且，监听在TCP和UNIX域套接字的服务器可以混用。默认情况下，nginx按加权轮转的方式将请求分发到各服务器。")]),e._v(" "),t("h3",{attrs:{id:"server-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-2","aria-hidden":"true"}},[e._v("#")]),e._v(" server")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：server address [parameters]\n默认：-\n上下文：upstream\n")])])]),t("p",[e._v("定义服务器的地址address和其他参数parameters。地址可以是域名或者IP地址，端口是可选的，或者是指定"),t("code",[e._v("unix:")]),e._v("前缀的UNIX域套接字的路径。如果没有指定端口，就使用"),t("code",[e._v("80")]),e._v("端口。如果一个域名解析到多个IP，本质上是定义了多个server。可选择的参数如下："),t("br"),e._v(" "),t("strong",[t("code",[e._v("weight=number:")])]),e._v(" 设定服务器的权重，默认是1。"),t("br"),e._v(" "),t("strong",[t("code",[e._v("max_fails=number:")])]),e._v(" 设定Nginx与服务器通信的尝试失败的次数。在fail_timeout参数定义的时间段内，如果失败的次数达到此值，Nginx就认为服务器不可用。在下一个fail_timeout时间段，服务器不会再被尝试。失败的尝试次数默认是1。设为0就会停止统计尝试次数，认为服务器是一直可用的。"),t("br"),e._v(" "),t("strong",[t("code",[e._v("fail_timeout=time:")])]),e._v(" 1.统计失败尝试次数的时间段。2.服务器被认为不可用的时间段。"),t("br"),e._v(" "),t("strong",[t("code",[e._v("backup:")])]),e._v(" 标记为备用服务器。当主服务器不可用以后，请求会被传给这些服务器。"),t("br"),e._v(" "),t("strong",[t("code",[e._v("down:")])]),e._v(" 标记服务器永久不可用，可以跟"),t("code",[e._v("ip_hash")]),e._v("指令一起使用。")]),e._v(" "),t("h3",{attrs:{id:"iphash"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iphash","aria-hidden":"true"}},[e._v("#")]),e._v(" iphash")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：iphash\n默认：-\n上下文：upstream\n")])])]),t("p",[e._v("指定服务器组的负载均衡方法，请求基于客户端的IP地址在服务器间进行分发。IPv4地址的前三个字节或者IPv6的整个地址，会被用来作为一个散列key。这种方法可以确保从同一个客户端过来的请求，会被传给同一台服务器。如果其中一个服务器想暂时移除，应该加上down参数。这样可以保留当前客户端IP地址散列分布。")]),e._v(" "),t("h3",{attrs:{id:"keepalive"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#keepalive","aria-hidden":"true"}},[e._v("#")]),e._v(" keepalive")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：keepalive connections;\n默认：-\n上下文：upstream\n")])])]),t("p",[e._v("激活对上游服务器的连接进行缓存。connections参数设置每个worker进程与后端服务器保持连接的最大数量。这些保持的连接会被放入缓存。如果连接数大于这个值时，最久未使用的连接会被关闭。")]),e._v(" "),t("h2",{attrs:{id:"http-access模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-access模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Access模块")]),e._v(" "),t("p",[e._v("该模块允许限制某些IP地址的客户端访问，规则按照顺序依次检测，直到匹配到第一条规则，示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n    deny  192.168.1.1;\n    allow 192.168.1.0/24;\n    allow 10.1.1.0/16;\n    allow 2001:0db8::/32;\n    deny  all;\n}\n")])])]),t("h3",{attrs:{id:"allow"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#allow","aria-hidden":"true"}},[e._v("#")]),e._v(" allow")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：allow address | CIDR | all;\n默认：-\n上下文：http, server, location, limit_except\n")])])]),t("p",[e._v("允许指定的网络地址访问。")]),e._v(" "),t("h3",{attrs:{id:"deny"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#deny","aria-hidden":"true"}},[e._v("#")]),e._v(" deny")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：deny address | CIDR | all;\n默认：-\n上下文：http, server, location, limit_except\n")])])]),t("p",[e._v("拒绝指定的网络地址访问。")]),e._v(" "),t("h2",{attrs:{id:"http-empty-gif模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-empty-gif模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Empty Gif模块")]),e._v(" "),t("p",[e._v("本模块在内存中常驻了一个 1x1 的透明 GIF 图像，可以被非常快速的调用。常用在统计等仅需要一个请求的时候。示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location = /_.gif {\n    empty_gif;\n}\n")])])]),t("h3",{attrs:{id:"empty-gif"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#empty-gif","aria-hidden":"true"}},[e._v("#")]),e._v(" empty_gif")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：empty_gif;\n默认：-\n上下文：location\n")])])]),t("h2",{attrs:{id:"http-fcgi模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-fcgi模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Fcgi模块")]),e._v(" "),t("p",[e._v("这个模块允许Nginx 与FastCGI 进程交互，并通过传递参数来控制FastCGI 进程工作。更多可参考"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/ngx_http_fastcgi_module.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ngx_http_fastcgi_module"),t("OutboundLink")],1),e._v("，示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n    fastcgi_pass  localhost:9000;\n    fastcgi_index index.php;\n\n    fastcgi_param SCRIPT_FILENAME /home/www/scripts/php$fastcgi_script_name;\n    fastcgi_param QUERY_STRING    $query_string;\n    fastcgi_param REQUEST_METHOD  $request_method;\n    fastcgi_param CONTENT_TYPE    $content_type;\n    fastcgi_param CONTENT_LENGTH  $content_length;\n}\n")])])]),t("h3",{attrs:{id:"fastcgi-pass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fastcgi-pass","aria-hidden":"true"}},[e._v("#")]),e._v(" fastcgi_pass")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：fastcgi_pass address;\n默认：-\n上下文：location, if in location\n")])])]),t("p",[e._v("设置一个FastCGI服务的地址，可以是一个地址加端口，例如"),t("code",[e._v("fastcgi_pass localhost:9000;")]),e._v("；也可以是一个UNICX的socket路径，如"),t("code",[e._v("fastcgi_pass unix:/tmp/fastcgi.socket;")])]),e._v(" "),t("h3",{attrs:{id:"fastcgi-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fastcgi-index","aria-hidden":"true"}},[e._v("#")]),e._v(" fastcgi_index")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：fastcgi_index name;\n默认：-\n上下文：http, server, location\n")])])]),t("p",[e._v("如果请求的FastCGI URI以"),t("code",[e._v("/")]),e._v("结束，该指令设置的文件会被附加到URI的后面并保存在变量"),t("code",[e._v("$fastcgi_script_name")]),e._v("中")]),e._v(" "),t("h3",{attrs:{id:"fastcgi-param"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fastcgi-param","aria-hidden":"true"}},[e._v("#")]),e._v(" fastcgi_param")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：fastcgi_param parameter value [if_not_empty];\n默认：-\n上下文：http, server, location\n")])])]),t("p",[e._v("该指令指定的参数,将被传递给FastCGI-server。")]),e._v(" "),t("p",[e._v("它可能使用字符串、变量及其它们的组合来作为参数值。如果不在此制定参数，它就会继承外层设置；如果在此设置了参数，将清除外层相关设置，仅启用本层设置。")]),e._v(" "),t("p",[e._v("下面是一个例子,对于PHP来说的最精简的必要参数：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  fastcgi_param  SCRIPT_FILENAME  /home/www/scripts/php$fastcgi_script_name;\n  fastcgi_param  QUERY_STRING     $query_string;\n")])])]),t("p",[e._v("参数SCRIPT_FILENAME 是PHP 用来确定执行脚本的名字，而参数QUERY_STRING 是它的一个子参数。")]),e._v(" "),t("p",[e._v("如果要处理POST,那么这三个附加参数是必要的：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  fastcgi_param  REQUEST_METHOD   $request_method;\n  fastcgi_param  CONTENT_TYPE     $content_type;\n  fastcgi_param  CONTENT_LENGTH   $content_length;\n")])])]),t("p",[e._v("如果PHP 在编译时使用了--enable-force-cgi-redirect选项，设置参数REDIRECT_STATUS 的值为200就是必须的了。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("  fastcgi_param  REDIRECT_STATUS  200;\n")])])]),t("h2",{attrs:{id:"http-gzip模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-gzip模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Gzip模块")]),e._v(" "),t("p",[e._v("这个模块支持在线实时压缩输出数据流，内置变量 $gzip_ratio 可以获取到gzip的压缩比率，示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(": gzip             on;\n: gzip_min_length  1000;\n: gzip_proxied     expired no-cache no-store private auth;\n: gzip_types       text/plain application/xml;\n")])])]),t("h3",{attrs:{id:"gzip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gzip","aria-hidden":"true"}},[e._v("#")]),e._v(" gzip")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：gzip on | off;\n默认：gzip off;\n上下文：http, server, location, if in location\n")])])]),t("p",[e._v("开启或者关闭gzip模块")]),e._v(" "),t("h3",{attrs:{id:"gzip-comp-level"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gzip-comp-level","aria-hidden":"true"}},[e._v("#")]),e._v(" gzip_comp_level")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：gzip_comp_level level;\n默认：gzip_comp_level 1;\n上下文：http, server, location\n")])])]),t("p",[e._v("gzip压缩比，1 压缩比最小处理速度最快，9 压缩比最大但处理最慢（传输快但比较消耗cpu）。")]),e._v(" "),t("h2",{attrs:{id:"http-headers模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-headers模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Headers模块")]),e._v(" "),t("p",[e._v("本模板可以设置HTTP报文的头标。示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v(": expires     24h;\n: expires     0;\n: expires     -1;\n: expires     epoch;\n: add_header  Cache-Control  private;\n")])])]),t("h3",{attrs:{id:"add-header"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-header","aria-hidden":"true"}},[e._v("#")]),e._v(" add_header")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：add_header name value;\n默认：-\n上下文：http, server, location\n")])])]),t("p",[e._v("当HTTP应答状态码为 200、204、301、302 或 304 的时候，增加指定的HTTP头标。其中头标的值可以使用变量。")]),e._v(" "),t("h3",{attrs:{id:"expires"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expires","aria-hidden":"true"}},[e._v("#")]),e._v(" expires")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：expires [time|epoch|max|off];\n默认：expires off\n上下文：http, server, location\n")])])]),t("p",[e._v("使用本指令可以控制HTTP应答中的“Expires”和“Cache-Control”的头标，（起到控制页面缓存的作用）。\n可以在time值中使用正数或负数。“Expires”头标的值将通过当前系统时间加上您设定的"),t("code",[e._v("time")]),e._v("值来获得。"),t("br"),e._v(" "),t("code",[e._v("epoch")]),e._v("指定“Expires”的值为 1 January, 1970, 00:00:01 GMT。"),t("br"),e._v(" "),t("code",[e._v("max")]),e._v("指定“Expires”的值为 31 December 2037 23:59:59 GMT，“Cache-Control”的值为10年。"),t("br"),e._v(" "),t("code",[e._v("-1")]),e._v("指定“Expires”的值为 服务器当前时间 -1s,即永远过期"),t("br"),e._v(" "),t("code",[e._v("Cache-Control")]),e._v("头标的值由您指定的时间来决定：负数为"),t("code",[e._v("Cache-Control: no-cache")]),e._v("；正数或0为"),t("code",[e._v("Cache-Control: max-age = #")]),e._v("，#为您指定时间的秒数。"),t("br"),e._v(" "),t("code",[e._v("off")]),e._v("表示不修改“Expires”和“Cache-Control”的值。")]),e._v(" "),t("h2",{attrs:{id:"http-index模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-index模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Index模块")]),e._v(" "),t("p",[e._v("模块 ngx_http_index_module 处理以斜线字符(‘/’)结尾的请求，示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n    index index.$geo.html index.html /index.html;\n}\n")])])]),t("h3",{attrs:{id:"index-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#index-2","aria-hidden":"true"}},[e._v("#")]),e._v(" index")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：index file ...;\n默认：index index.html\n上下文：http, server, location\n")])])]),t("p",[e._v("定义将要被作为默认页的文件。 文件 file 的名字可以包含变量。 文件以配置中指定的顺序被nginx检查。列表中的最后一个元素可以是一个带有绝对路径的文件。")]),e._v(" "),t("h2",{attrs:{id:"http-referer模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-referer模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Referer模块")]),e._v(" "),t("p",[e._v("ngx_http_referer_module模块允许拦截“Referer”请求头中含有非法值的请求，阻止它们访问站点。 需要注意的是伪造一个有效的“Referer”请求头是相当容易的，因此这个模块的预期目的不在于彻底地阻止这些非法请求，而是为了阻止由正常浏览器发出的大规模此类请求。还有一点需要注意，即使正常浏览器发送的合法请求，也可能没有“Referer”请求头。示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("valid_referers none blocked server_names\n               *.example.com example.* www.example.org/galleries/\n               ~\\.google\\.;\n\nif ($invalid_referer) {\n    return 403;\n}\n")])])]),t("h3",{attrs:{id:"valid-referers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#valid-referers","aria-hidden":"true"}},[e._v("#")]),e._v(" valid_referers")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：valid_referers none | blocked | server_names | string ...;\n默认：index index.html\n上下文：server, location\n")])])]),t("p",[t("code",[e._v("Referer")]),e._v("请求头为指定值时，内嵌变量$invalid_referer被设置为空字符串， 否则这个变量会被置成“1”。查找匹配时不区分大小写。")]),e._v(" "),t("p",[e._v("该指令的参数可以为下面的内容：")]),e._v(" "),t("p",[t("code",[e._v("none")]),e._v("缺少“Referer”请求头；"),t("br"),e._v(" "),t("code",[e._v("blocked")]),e._v("“Referer” 请求头存在，但是它的值被防火墙或者代理服务器删除； 这些值都不以“http://” 或者 “https://”字符串作为开头；"),t("br"),e._v(" "),t("code",[e._v("server_names")]),e._v("“Referer” 请求头包含某个虚拟主机名；"),t("br"),e._v(" "),t("code",[e._v("任意字符串")]),e._v("定义一个服务器名和可选的URI前缀。服务器名允许在开头或结尾使用"),t("code",[e._v("*")]),e._v("符号。当nginx检查时，“Referer”请求头里的服务器端口将被忽略。"),t("br"),e._v(" "),t("code",[e._v("正则表达式")]),e._v("必须以“~”符号作为开头。需要注意的是表达式会从“http://”或者“https://”之后的文本开始匹配。"),t("br")]),e._v(" "),t("h2",{attrs:{id:"http-log模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-log模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Log模块")]),e._v(" "),t("p",[e._v("更多参考可见"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/ngx_http_log_module.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ngx_http_log_module"),t("OutboundLink")],1)]),e._v(" "),t("h3",{attrs:{id:"access-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#access-log","aria-hidden":"true"}},[e._v("#")]),e._v(" access_log")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：access_log path [format [buffer=size]];\n        access_log off;\n默认：access_log logs/access.log combined;\n上下文：http, server, location, if in location, limit_except\n")])])]),t("p",[e._v("为访问日志设置路径，格式和缓冲区大小（nginx访问日志支持缓存）。在同一个配置层级里可以指定多个日志。特定值off会取消当前配置层级里的所有access_log指令。如果没有指定日志格式则会使用预定义的“combined”格式。")]),e._v(" "),t("h2",{attrs:{id:"http-proxy模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#http-proxy模块","aria-hidden":"true"}},[e._v("#")]),e._v(" HTTP Proxy模块")]),e._v(" "),t("p",[e._v("此模块专伺将请求导向其它服务，更多参加"),t("a",{attrs:{href:"http://tengine.taobao.org/nginx_docs/cn/docs/http/ngx_http_proxy_module.html#proxy_pass",target:"_blank",rel:"noopener noreferrer"}},[e._v("ngx_http_proxy_module"),t("OutboundLink")],1),e._v("，示例如下：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("location / {\n    proxy_pass        http://localhost:8000;\n    proxy_set_header  X-Real-IP  $remote_addr;\n}\n")])])]),t("p",[e._v("注意一点,当使用HTTP PROXY 模块时(或者甚至是使用FastCGI时),用户的整个请求会在nginx中缓冲直至传送给后端被代理的服务器.因此,上传进度的测算就会运作得不正确,如果它们通过测算后端服务器收到的数据来工作的话。")]),e._v(" "),t("h3",{attrs:{id:"proxy-pass"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#proxy-pass","aria-hidden":"true"}},[e._v("#")]),e._v(" proxy_pass")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("语法：proxy_pass URL;\n默认：-\n上下文：location, if in location, limit_except\n")])])]),t("p",[e._v("设置后端服务器的协议和地址，还可以设置可选的URI以定义本地路径和后端服务器的映射关系。这条指令可以设置的协议是"),t("code",[e._v("http")]),e._v("或者"),t("code",[e._v("https")]),e._v("，而地址既可以使用域名或者IP地址加端口（可选）的形式来定义，又可以使用UNIX域套接字路径来定义。")])])},[],!1,null,null,null);a.default=s.exports}}]);